/* Use o.object_name = 'LOCMST' to query blocked on table locmst,
 * 'Lock Owner' indidate this is the owner currently own the lock to object_name
 * 'Lock Waitor' indicate this is the waitor currently for object_name, if all
 * are 'Lock Waitor', which means one of them must in process of getting lock,
 * then look at 'seconds_in_wait' to tell which is in waiting.
 * 'event' tells for what event this session is waiting.
 * order by killme which is session, if there multiple rows for same session,
 * it means this sql is locking multiple objects.
 */
[select object_name,
        machine,
        s.sid,
        s.serial#,
        s.sid || ', ' || s.serial# killme,
        s.blocking_session,
        decode(k.lmode, 0, 'none', 1, 'null', 2, 'RS', 3, 'RX', 4, 'S', 5, 'SRX', 6, 'X') Lock_mode,
        k.id1,
        k.id2,
        s.status,
        s.event,
        s.state,
        s.seconds_in_wait,
        s.sql_exec_start,
        q.sql_text,
        q.sql_id,
        q.child_number,
        decode(s.sql_id, null, 'Lock Owner', 'Lock Waitor') role,
        s.type,
        s.wait_class
   from gv$locked_object l,
        dba_objects o,
        gv$session s,
        gv$lock k,
        gv$sql q
  where l.object_id = o.object_id
    and l.session_id = s.sid
    and s.sid = k.sid
    and not exists(select 'x'
                     from gv$lock t
                    where t.sid = k.sid
                      and t.lmode > k.lmode)
    and nvl(s.sql_id, s.prev_sql_id) = q.sql_id
  order by killme,
        object_name]

/* Kill the 'Lock Owner' should release other waitors */
[ALTER system kill session @killme]

/* Use below query to get binded parameter for sql_id,
 * sql_id and child_number uniquely locate the session of the sql in running
 */
[select sql_id,
        child_number,
        datatype_string,
        max_length,
        last_captured,
        value_string
   from gv$sql_bind_capture
  where rownum < 10
    and sql_id = '7bgc8jdg3jvaa'
    and child_number = 0]

/* Vivid query for what is blocking what:
/*blocking_status                                         blocker_session victim_session  locker_object   lock_hold_minutes   locker_type sql_id_src     sql_text_src                                                 param_src           action      waiter_object   lock_wait_minutes   wait_lock_type  sql_id_dst      sql_text_dst                                                param_dst
  PRDC@LAPTOP-LM4Q6GR9 is blocking PRDC@LAPTOP-LM4Q6GR9   268,50775       16,25283        INVLOD          29.95               TX          awnrhcx4fc6s1   update invlod     set lodnum = lodnum   where lodnum = :1   393102640800447201  Is blocking INVLOD          29.85               TX              g87t8grw1njhy   update invlod     set lodnum = lodnum   where stoloc = :1   RA001
  PRDC@LAPTOP-LM4Q6GR9 is blocking PRDC@LAPTOP-LM4Q6GR9   268,50775       270,19065       INVLOD          29.95               TX          awnrhcx4fc6s1   update invlod     set lodnum = lodnum   where lodnum = :1   393102640800447201  Is blocking INVLOD          10.53               TX              awnrhcx4fc6s1   update invlod     set lodnum = lodnum   where lodnum = :1   393102640800447201
*/
[select s1.username || '@' || s1.machine || ' is blocking ' || s2.username || '@' || s2.machine blocking_status,
      s1.sid || ',' || s1.serial# blocker_session,
      s2.sid || ',' || s2.serial# victim_session,
      o1.object_name locker_object,
      round(l1.ctime / 60, 2) lock_hold_minutes,
      l1.type locker_type,
      q1.sql_id sql_id_src,
      q1.sql_text sql_text_src,
      sb1.value_string param_src,
      'Is blocking' action,
      o2.object_name waiter_object,
      round(l2.ctime / 60, 2) lock_wait_minutes,
      l2.type wait_lock_type,
      q2.sql_id sql_id_dst,
      q2.sql_text sql_text_dst,
      sb2.value_string param_dst
 from gv$lock l1,
      gv$session s1,
      gv$sql q1,
      gv$sql_bind_capture sb1,
      gv$locked_object lo1,
      dba_objects o1,
      gv$lock l2,
      gv$session s2,
      gv$sql q2,
      gv$sql_bind_capture sb2,
      gv$locked_object lo2,
      dba_objects o2
where s1.sid = l1.sid
  and nvl(s1.sql_id, s1.prev_sql_id) = q1.sql_id
  and q1.sql_id = sb1.sql_id
  and sb1.child_number = 0
  and lo1.session_id = s1.sid
  and lo1.object_id = o1.object_id
  and s2.sid = l2.sid
  and s2.sql_id = q2.sql_id
  and q2.sql_id = sb2.sql_id
  and sb2.child_number = 0
  and lo2.session_id = s2.sid
  and lo2.object_id = o2.object_id
  and l1.block = 1
  and l2.request > 0
  and l1.id1 = l2.id1
  and l1.id2 = l2.id2]

/* Quicker check wait/hold session:
 waiting_session  waiting_con_id  holding_session holding_con_id  lock_type     mode_held   mode_requested  lock_id1    lock_id2
 16               0               16              0               Transaction   None        Exclusive       589829      20254
 270              0               16              0               Transaction   None        Exclusive       589829      20254
 16               0               268             0               Transaction   Exclusive   Exclusive       589829      20254
 270              0               268             0               Transaction   Exclusive   Exclusive       589829      20254
 Note: Check column 'mode_held', 'Exclusive' shows the root blocker session is 268, both 16 and 270 are victims.
 */
[select *
 from dba_waiters]

/* dba_blockers shows all blockers, from above 268 block 16 and 270, and 16 also block 270, but 268 is root blocker.
 * holding_session  con_id
   16               0
   268              0
 */
[select *
 from dba_blockers]
 
/* List top 10 expensive query */
[select *
   from (select buffer_gets,
                physical_read_bytes/(1024*1024) physical_read_mb,
                disk_reads,
                sorts,
                user_io_wait_time / 1000000 user_io_wait_time_sec,
                elapsed_time / 1000000 elapsed_time_sec,
                cpu_time/1000000 cpu_sec,
                executions,
                rows_processed,
                sql_id,
                sql_text
           from v$sqlstats
           order by cpu_time desc)
     where rownum <10]
